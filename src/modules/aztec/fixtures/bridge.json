{
  "name": "bridge",
  "functions": [
    {
      "name": "_assert_operator",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_assert_swap_params",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "swap_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash_for_redeeming",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_assert_token_is_same",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "in_token_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "in_token_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_initialize",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "owner",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_mint_private",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "out_token_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_save_swap",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "in_token_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "out_token_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "in_token_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "l2_secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_update_swap",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "swap_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "out_token_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "serialized_note",
          "type": {
            "kind": "array",
            "length": 0,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/+1VQQ4CIQws7C5sheg/PGHiA/b/rxK0TSYsnuwejDZpgBaGYWggEpGjl03VZ9qb5jdpy2d2c3ZY5Uie/kt4ToY83YCng7po7VI9VI/VrxJn2tcOy1zEYlnbzEMsSn+Sts1ZjXUKwM0IswT7+ywM2sygkWqzDDQPA83jQPMVMC6Qp+5OzrKGbc92x7tWc914gz7D+Y6oh5Mt5rMekjFmw8igieqn3BPkE+iVjfVysKfi6hj5/bn+NleGGL5Bml8h5rtz4DuXAaN/I0w/T5INPGze7N2np/YAao7Tjj0JAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "owner",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "execute_swap_private",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "swap_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "out_token_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "execute_swap_public",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "swap_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "out_token_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_counter",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUuw7CMAx0Qh4EJH6BnakszP0G/qASFSMS8P+CQE49rKpLU+ElrpPcOWe7RkSMfG0lgxnlH4ofKN6WtZlpgfhqYfo3hi9YiXK2Zd2Vt9i6vKftiIaBtK3Ec+T6MK4QV5LfOiK2Ulok8rGXtdvTvh+5E0b4+D5iTgYd9F3WyKu3NPPsoxHztPQNro3KYclcoANwncrln7yxLm+TMdbEi76IpDv4cS6Rz/1j1bkoy8xUkKEHamFy/8OmZnfJHsz64f/0eN7u3bU/993FUFpOpWgpNfZ55FFSR7GpMkaKAYdLq+Wp9n6Na9Sa7QWxNSHDEAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_storage",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/9VZW07DMBB0nEeTpgRSCi3lcYbwOEDOwA2QqPhEAu7DP6eEBI86rJwKKU6d7k+cdXZndpqsKztSSgXq10K1tYCuEY21ea7xfRl/QnG1uVY9LSEOrnLGPzlikysjztpcC1OLdot7m1t0TUhvVziB+ms1jUOqWz6X0bwmnxaxjXafNB9bYhILHsfDF5EOMpY1ikUtVT9rNWKcmu6BNRUchuQCHZA3Elx84k7c4lZNjpRw8V5MSHfgp8Qjdcvjjr9HrjcbQGcldIYBq6s3+ODS1Rswn5JPi1jZG1AXPzcz49CSOyff1IxnlljWKBe1VP2s1YhxaroHFveG2Qi4xHvigt8EeaeCi0/cI7e4bZ8qCBfv6BHpDvyCeBRuedx39anjAXRWQmfYsdBbau+bS+CZS1fPxHxBPi1iZc8szZh75tyMQ0vuknwnZjy3xLJGpail6metRoxT0z2wuGfOR8AlHxGXeE9c8H4g74ng4hP31C1u278XhIvv5ZR0B/6CeCzc8njgPsX1ng2gsxI6w4DVtZb45pKPiEvgmUvXWoL5Bfm0iJVrydKMeS1ZmXFoyb0k37kZryyxrNFS1FL1s1YjxqnpHli8lqxGwCUfEZd4RFzKPXHBu4q854KLT9wLt7jturYmXHy7F6Q78NfE48otj4dM8GhsV3+7Ii6XbrncNjmv3eZsdb4h/qgVODnN81p647i2gDCRF/fM779c8wPiWh4Q16Vnrhn51uTD/CX5tKiD9+fx/EQNcz6RqO1+uqucfJYA29WLhtzPb/ZH8Y29f7y+Pb1sHjdPz11HaYp+Djnmv2jYHo/Ih61YPlJB/IR8yJPSnJTHWf0yb9e5Iewb0NvzaXwcAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_swap",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "swap_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "swap::Swap",
          "fields": [
            {
              "name": "is_private",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "in_token_id",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "out_token_id",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "in_token_amount",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "out_token_amount",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "l2_address",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "l2_secret_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "is_executed",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/82Y224aMRCGDUt22RASCCGEEMI2x15FCz3lohf7DO0TIIVWlUiRYKu+frNkRv1w3UoVptQSeBjj+T+PDbY3NsaUzHMJYLOoL5M6Xa8MS/5ipVVwljGOolSk3pE6lDqSWvvGT68cdtmslhB25ok79J/XlOxljH0fY7NzFZvV+bdzUIEvQEz1VawcxWiP4NN25pztRjhD9M+Ml7yMyK7FXucZbK6Xil+WYWh+5sJTzOVaivzGfMO5MsifstfQHqGt6jlfJfPr789eS3/DWt4y66bmP/Ybc7QnzPxPML8ZT83zeIoYuxKrAq0aNOsbmLs9iVWSl2rsQnd/A7qqsyO6yqFaAb5zK3Ud+bDnYxO5YclgqxZZSltm4Z5m4KtbueI+xzn4gvaG2Nwvm2IHjtgN+A7Ebjr6MkcNayzpemWZI+pk+Kxau2Bo/gcs1X/EonOicQ8slm3qHvrVXf6PtqCra/QQeVf9FjiOPI+/iNF2cByBQ/Xb4Dj2yzEqYnQcHMfgUP0OOE78crwqYnQdHCfgUP0uOE79crwuYvQcHKfgUP0eOM78cizPmn0Hxxk4VL8PjnO/HG+LGAMHxzk4VH8AjsQvx7sixgsHRwIO1dfvxbC5B12I3YLvUuw2fFdid+C7FrsL343YPfj0TNKH76XYA/jKDmbdQy/g0zvXJXx6J7uCT8+i1/DpXeQGPt1bbuHT86xyRhJPeTKp0/XK/QbO+/fMkZY/nYtC1J7v1sMit3r2W+Sz+fjz5MNk/FAClqLaVzDb5nFKp5GPH7Q/Hz9ofz5KCCy9yDgea2Wexs+BGsdAAxlEAa339KpZPaOyr67b91J/fM5pspjO8iRNvj69j6fT2ffJw13CtkXy+G2RJ4t8PM+TT/PZYzK8+wEwdhYo3BMAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "set_operator",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "operator",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "set_tokens",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "token1",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token2",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "swap_private",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "in_token_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "in_token_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "out_token_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "in_token_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce_for_burn",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash_for_redeeming",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "swap_public",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "in_token_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "out_token_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "in_token_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce_for_burn",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "",
      "",
      "eJzVndGu9LqRnd/lXBtBk1VFUX6VIBdGMgEGGHiC2HeG331kuLv3Tiwcce2fXfp4NT8GlM4qS1qlvZpf6W+//cd//s8//fXf//PPf/ntj3/77fHftvLbH//73377y//505//8f/4y1//9H//+tsfH3/47d/+/L+O//v3P/z2v//9P/7ttz+Wv/+PP/xjedWWm7bcteWhLW/a8m10+R/+ZVWxUl8rj397f6+2/jx7/+jZ90+evT8+evbhO/JHZx++gX909uH7/UdnH348fnT24afpR2cffvh+dPaPPqv9o89q/+izun/0Wd0/+qzuH31W948+q/tHn9X9o8/q/tFndf/os7p/9FndP/qslsdHH9by+OjTWh4ffVzL46PPa3l89IEtj196Yi329+mtl++nP1veHvZe3h5+ouaXnvDpan7JEaar+SUHma7mlxxntprySwY1Xc0v+dl0Nb9kf9PV/JJbTlfzS+Y6XQ3KiwvKiwvKiwvKiwvKiyvKiyvKiyvKiyvKiyvKiyvKiyvKiyvKiyvKiyvKiw3lxYbyYkN5saG82FBebCgvNpQXG8qLDeXFhvJiR3mxo7zYUV7sKC92lBc7yosd5cWO8mJHebGjvDhQXhwoLw6UFwfKiwPlxYHy4kB5caC8OFBeHCgvbigvbigvbigvbigvbigvbigvbigvbigvbigvbigv3lBePM4ApKhBefE4wZCiBuXF4/xFihqUF/8aPTJdDcqLf41Oma3m12iW6WpQXvxrtMx0NalPeHzt6G1bOVGT+oRfqfk1zkNT4/Z1pY5/n1ypX+NCpqtJvIsH1CS+UQyoSXyjGFCT90YR4f25OiK+Tu2Pl5Y8t7nWkug1fqz5ukp7/4XlT/GJLx/zxSe+q2jid4vn4r3b1y1T/ym8/hpLdKfw1N4xU/iwlT7Xa/h6HYd2nuuHTeO5fvg5fa4ffjT+uX4cHnmu10YT1HEA47leG05QxyGG53rx+o6DAM/14vUd30z/XC9e3/EN6c/14vUd39T9XC9e3/GN0c/14vUd31z8XC9e3/ENus/14vUd3+T6XC9e3/GNos/14vUd32z5XC9e3/ENi8/14vUd3/T3XC9e3/GNc8/14vUd33z2XC9e3/ENXM/14vUd3wT1XC9e3/GNRM/14vUd34zzXC9e3/ENLc/14vUd3xTyXC9e3/GNFc/14vUd35zwXC9e3/Ef+J/rxes7/iP5c714fcd/aH6uF6/v+I+1z/Xi9R3/wfO5Xry+4z8aPteL11ec7VXF4V5VnO5VxfFeVZzvVcd/onmuF6/v+M8c/1w//kPEc714fcfD/Od68fqOj6d6rhev73j8/1wvXt/xMU/P9eL1HY/on+vF6zsecz/Xi9d3PCp+rhev73jg+lwvXt/xHPK5Xru+Np64Pddr19fG5+s812vX18T8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysT8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8ysX8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8KsT8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cazlIYnn3jjW8pDEc28ca3lI4rk3jrU8JPHcG8daHpJ47o1jLQ9JPPfGsZaHJJ5741jLQxLPvXGs5SGJ59441vKQxHNvHGt5SOK5N461PCTh3LvwWMvCYy0Lj7UsPNayPHDuXXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaFh5rWXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaFh5rWXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaFh5rWXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaFh5rWXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaFh5rWXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaFh5rWXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaFh5rWXisZeGxloXHWhYea1l4rGXhsZaFx1oWHmtZeKxl4bGWhcdaVh5rWXmsZeWxlpXHWtYHzr0rj7WsPNay8ljLymMtK4+1rDzWsvJYy8pjLSuPtaw81rLyWMvKYy0rj7WsPNay8ljLymMtK4+1rDzWsvJYy8pjLSuPtaw81rLyWMvKYy0rj7WsPNay8ljLymMtK4+1rPmspT2uJKW797WkdPe+lpTu3j3ekqyUM0np7n0tKd29LyXls5bXktLd+1pSuntfS0p372tJ6e59LSndva8lpbv3tSSee+ezlteSeO6dz1peS+K5dz5reS2J5975rOW1JJ5757OW15J47p3PWl5L4rl3Pmt5LYnn3vms5bUknnvns5bXknjunc9aXkviuXc+a3ktiefe+azltSSee+ezlteSeO6dz1peS+K5dz5reS2J5975rOW1JJ5757OW15J47p3PWl5L4rl3Pmt5LYnn3vms5bUknnvns5bXknjunc9aXkviuXc+a3ktiefe+azltSSee+ezlteSeO6dz1peS8K5t+WzlteScO5t+azltSSce9sD596Wz1peS8K5t+WzlteScO5t+azlpaR81vJaEs+981nLa0k8985nLa8l8dw7n7W8lsRz73zW8loSz73zWctrSTz3zmctryXx3DuftbyWxHPvfNbyWhLPvfNZy2tJPPfOZy2vJfHcO5+1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",
      "",
      "",
      "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
      "eJztnN1qGzEQRt9lr02RNJJG8quUXoQ2hUBIS5O74HevQ2xtWCsaUm2/ccRexYGRdfi8PtJ4f56n+1/fb57ufj08Tvvniab91+fp8ffNw8t/j083f56mvdlNtw8/jn8Pu+nn3f3ttLeH3UWVJQr5VHl8nWypplQr9874c7l3USjPFE7FOVEp9e7wbTf5zwgdgNDHmgJNOf07dKxBuxDtaYSLXkJnHwo6x7naV8vXy5vh6KulnlZAz6agJ2ffoh8nyCtMwNyYwJr+GRK5MkN2Tkw/zAeOT7wEsnCgmObDgU1YArlrA6ouBZpAVc1rAlUVrgm0gp7XBVpBuusCraDSdYFWUO+qQA5vagEIb2oua/HxdXBLILypBSC8qQUgvKkFILypBSC8qQUgvKkFILypBSC8qdtAhDe1AKRg6hQLUDK0BFIwdRtIwdRtIAVTt4EUTN0GUjB1G0jB1G0gBVO3gRRM3QTyCqZuA8FNHZwpP0AFZ5c/x3i4qSUguKklILipJSC4qSUguKklILipJSC4qSUguKkFoAA3tQSkYOoQZyD2SyAFU7eBFEzdBlIwdRtIwdRtIAVTt4EUTN0GUjB1G0jB1E2gqGDqNhDe1OTmpYMoLYHwphaA8KYWgPCmFoDwphaA8KYWgPCmFoDwphaA8KZuAzHe1AIQ3NTRxXKKM5LJSyC4qSM5noHSci1juKmjt7YA+YtTCww3dUxxTii7i4Tgpo7ZuxkoLxtFhpuajS1ng9jwxbcMbmo2uWzQ2Ga7BIKbmp0pl2myS8srGxhuaiY3f2REsV0eiU7FMcyfLtdKA9kzRzjuk0vxxy91hC8WnyAT+Hr1wUz4/N7xjZaqmViT54t9rLGunYo39ixhbzh3RAhfYf9fhNbO53asIxJSSY5KLLknQvieYLwI4buY8SKE77vGixC/UxwuQvzedrgI8bvx4SK89v7h+iPM195ufIIIB+pOtCLcupPuCLfupDvCrTvpjnDrTroj3LqT7gi37qQ7wpG6EyqhHF8HMRU63zefvTEdEY7UnehEaM1I7YlWhiP1J1oZjtSgaGU4UoeileFILYpWhiP1KFoZjtSkaGU4UpeileHWpvRnuPUp3RniH+82YIZbn9Kf4dan9Ge49Sn9GY7Up3AuD9K0ibtiufLWI/D5thH21I6leV3Gl+qWIpY7HNjNocfwOqS+hApjqkuGLY96fXs7eeDX3c47g1oTvQyqilUaVDWJNKj61ZEGVQ+s9wcdDn8BgY9R2g==",
      "",
      "",
      "eJzNlMsKg0AMRf8laykmcR76K6ULaS0IoqW6k/n3VlApOMWNyN3NwL3hLJIzUtPdy6Hu2p6KkdKLoeI6Uv8q2+nfD+V7oCJ3ahOq2sf0ND4k9KybigoOySbLYmXOsqquWWcjYXXL3IzdGrU+3JIviwVicUAsHoglB2LhFAmGkWAECUaRYDIkGCT7MpJ+Gcm/jCRgRjKwIBlYkAwsSAYWJAMLkoHlXANnogtMJr8w26jwgiBi1qg3M/e5sj6O+1yvH8atUbcI+6VjzGa3NKqAnU70Unc60YPa6UT3fqcT3bn/nRA+rE4yKw==",
      "eJzV289qGzEQgPF32bMpGv1Zaf0qpQfTphAITql9M/vujWGzDWQGX1TN11tCJPLhLL8hxnObXl6/n67Pr+fLdLxN4UuZjl9v0+XX6Xz//nI9/b5Ox2VJ5TA9nX/cvyxlPUw/n1+epqOsh09nJc5xOysppf1snZXDqc7b2Sx1Pzq39dvhrWUGtVRQSwO1LKAWCaQYIcVEUkwixWRSDElfIfErJH+FBLCQBI4kgSNJ4EgSOJIEjiSB41iBc0zvMTl+jPl8NJZlOxrvP9+Otrp1j8W6X/dY1/t1GyOg1L27hWEPrTECXGKSMQJ8YowR4BNjjACfGGME+MQYI8AnxhgBPjGG6z4xBtY+MSSBE0ngTBI4kwTOJIEzSeBMEjiTBM4kgTNJ4EwSOJMELiSBC0ngQhK4kAQuYwXu9p9wGYt1v+6xrvfrNkZA21tCCGnYU2vMAKcaYwj41MzGFHCqMcaAU40xB5xqjEHgVGNMAqcaw3enGkNtpxqUxTPK4hllcUVZXFEWV5TFFWVxRVlcURZXlMUVZXFFWVxRFjeUxQ1lcUNZ3FAWN5TFDWVxQ1ncUBY3lMVtsMXd3nhaBrPdL3yw8P3C1WFwry1/y+M86sld1Gngl6OOA78cdR745agDwS9HnQh+OepI8MtRZ4Jbztsvg/Wogjv2sGCWwJJZAotmCSybJbBwlsDSWQKLZwkwn/VFR8cemM/6uqNjD8xnfenRsQfms7766NgD81lfgHTsgfmsr0E69sB81pchHXtgPusrkY49MJ/1bUfHHpjP+naiYw/MZ31H8R/2dHtLWPSNxv8jfbT6/dL1D5ZGae+XPiwp70+Z/vnPR5fUv++jS+or++iSOvQeXVInk31pXf8AU+WI7w==",
      "eJzNmt1qAjEQRt8l11I2k8wk8VVKL6Q/UBAt1TvZdy/S7FbI1kF2mf3uRGbi0V3OAfXi9sfX3fnzeDi57cV1Tz667fPFnb52h+sTp/Pu++y2JVPZuPfD2/Uhx37jPj73727r+00zm5nraC4yTiaeGC2Bx1PDOBqpf9lcURgHRXBQEg5KxkEpMCjU4aB4HBTCQQk4KDi2JRzbEo5tCce2hGNbwrFtwLFtmG3bknwd9R3l+yzUhViHyZd8/y2G4dwcb46Vyj1bzStxz/b4Styzpb8S9+xCrMQ9Oycrcc9uz0rcs0O1ErdeNfF3z/ckNICHEG5foR0OSeps9GkclfwLE/WuGcLoZTOE0XNlCKM3yBBGD4shjF4LQxg9AYYwutcNYXRZG8IgGZiRDMxIBmYkAzOSgRnJwIxkYEYyMCMZmJEMzEgGFiQDC5KBBcnAgmRgsTVwpDDARLqFmRj94848jhau3LayXo7b1uvLcdsm4AFu9qmOMknLbVuL5bhtw7IYd7Jt0CPcPCCw5JbbNlfLcduWbTlu2wg+wC3d8P2o+NByw/ZS4YbtpcIN20vhbuDm0nLD9lLhhu2lwg3bSykjd2m5M2wvFW7YXircsL1M4+9yKbYezLC9VLhhe6lww/YypeFPNSnHlhu2lwo3bC/vc/tu8kYhn+sSMd+eX5cmr5K2NPkRaUuTPdeWJmOqLPnJkv2/1Pc/oaLMJQ==",
      "",
      "",
      "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",
      ""
    ],
    "fileMap": {
      "1": {
        "source": "mod swap;\nmod interfaces;\n\ncontract bridge {\n    use dep::aztec::{\n        context::{PrivateContext, PublicContext, Context},\n        state_vars::{\n            map::Map,\n            public_state::PublicState\n        },\n        types::type_serialization::field_serialization::{\n            FieldSerializationMethods, FIELD_SERIALIZED_LEN,\n        },\n        types::type_serialization::aztec_address_serialization::{\n            AztecAddressSerializationMethods, AZTEC_ADDRESS_SERIALIZED_LEN\n        },\n        types::address::{AztecAddress},\n        selector::compute_selector,\n    };\n    use crate::swap::{SWAP_SERIALIZED_LEN, Swap, SwapSerializationMethods};\n    use crate::interfaces::Token;\n\n    struct Storage {\n        owner: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        operator: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n\n        token1: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        token2: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n\n        swaps: Map<PublicState<Swap, SWAP_SERIALIZED_LEN>>,\n        counter: PublicState<Field, FIELD_SERIALIZED_LEN>,\n    }\n\n    impl Storage {\n        fn init(context: Context) -> Self {\n            Storage {\n                owner: PublicState::new(\n                    context,\n                    1,\n                    AztecAddressSerializationMethods,\n                ),\n                operator: PublicState::new(\n                    context,\n                    2,\n                    AztecAddressSerializationMethods,\n                ),\n                token1: PublicState::new(\n                    context,\n                    3,\n                    AztecAddressSerializationMethods,\n                ),\n                token2: PublicState::new(\n                    context,\n                    4,\n                    AztecAddressSerializationMethods,\n                ),\n                swaps: Map::new(\n                   context,\n                   5,\n                   |context, slot| {\n                       PublicState::new(\n                           context,\n                           slot,\n                           SwapSerializationMethods,\n                       )\n                   },\n               ),\n               counter: PublicState::new(\n                   context,\n                   6,\n                   FieldSerializationMethods,\n               ),\n            }\n        }\n    }\n\n    #[aztec(private)]\n    fn constructor(owner: AztecAddress) {\n        let selector = compute_selector(\"_initialize(Field)\");\n        context.call_public_function(context.this_address(), selector, [owner.address]);\n    }\n\n    #[aztec(public)]\n    internal fn _initialize(owner: Field) {\n        storage.owner.write(AztecAddress::new(owner));\n    }\n\n    #[aztec(public)]\n    fn set_operator(operator: Field) {\n        assert(context.msg_sender() == storage.owner.read().address, \"You are not the owner!\");\n        storage.operator.write(AztecAddress::new(operator));\n    }\n\n    #[aztec(public)]\n    fn set_tokens(token1: AztecAddress, token2: AztecAddress) {\n        assert(context.msg_sender() == storage.owner.read().address, \"You are not the owner!\");\n        storage.token1.write(token1);\n        storage.token2.write(token2);\n    }\n\n    #[aztec(public)]\n    internal fn _save_swap(\n        in_token_id: Field,\n        out_token_id: Field,\n        in_token_amount: Field,\n        l2_secret_hash: Field\n    ) {\n        let counter = storage.counter.read();\n        let swap = storage.swaps.at(counter);\n\n        swap.write(Swap {\n            is_private: 1,\n            in_token_id: in_token_id,\n            out_token_id: out_token_id,\n            in_token_amount: in_token_amount,\n            out_token_amount: 0,\n            l2_address: 0,\n            l2_secret_hash: l2_secret_hash,\n            is_executed: 0\n        });\n\n        storage.counter.write(counter + 1);\n    }\n\n    #[aztec(public)]\n    internal fn _update_swap(\n        swap_id: Field,\n        out_token_amount: Field,\n    ) {\n        let swap = storage.swaps.at(swap_id);\n        let info = swap.read();\n\n        swap.write(Swap {\n            is_private: 1,\n            in_token_id: info.in_token_id,\n            out_token_id: info.out_token_id,\n            in_token_amount: info.in_token_amount,\n            out_token_amount: out_token_amount,\n            l2_address: 0,\n            l2_secret_hash: info.l2_secret_hash,\n            is_executed: 1\n        });\n    }\n\n    #[aztec(public)]\n    internal fn _assert_token_is_same(in_token_id: Field, in_token_address: Field) {\n        let mut token = AztecAddress::new(0);\n        if (in_token_id == 1) {\n            token = storage.token1.read();\n        } else {\n            token = storage.token2.read();\n        }\n\n        assert(token.address == in_token_address, \"Token is not same!\");\n    }\n\n    #[aztec(public)]\n    internal fn _assert_swap_params(swap_id: Field, secret_hash_for_redeeming: Field) {\n        let swap = storage.swaps.at(swap_id);\n        let info = swap.read();\n\n        assert(info.is_executed == 0, \"Swap has been executed!\");\n        assert(info.is_private == 1, \"Swap is not private!\");\n        assert(info.l2_secret_hash == secret_hash_for_redeeming, \"Secret hash is not same!\");\n    }\n\n    #[aztec(public)]\n    internal fn _assert_operator(address: Field) {\n       assert(address == storage.operator.read().address, \"You are not the operator!\");\n    }\n\n    #[aztec(public)]\n    internal fn _mint_private(out_token_address: Field, amount: Field, secret_hash: Field) {\n        Token::at(out_token_address).mint_private(context, amount, secret_hash);\n    }\n\n    #[aztec(public)]\n    fn swap_public(\n        in_token_id: Field,\n        out_token_id: Field,\n        in_token_amount: Field,\n        nonce_for_burn: Field\n    ) {\n        let mut token = AztecAddress::new(0);\n        if (in_token_id == 1) {\n            token = storage.token1.read();\n        } else {\n            token = storage.token2.read();\n        }\n\n        Token::at(token.address).burn_public(\n            context,\n            context.msg_sender(),\n            in_token_amount,\n            nonce_for_burn,\n        );\n\n        let counter = storage.counter.read();\n        let swap = storage.swaps.at(counter);\n\n        swap.write(Swap {\n            is_private: 0,\n            in_token_id: in_token_id,\n            out_token_id: out_token_id,\n            in_token_amount: in_token_amount,\n            out_token_amount: 0,\n            l2_address: context.msg_sender(),\n            l2_secret_hash: 0,\n            is_executed: 0\n        });\n\n        storage.counter.write(counter + 1);\n    }\n\n    #[aztec(private)]\n    fn swap_private(\n        in_token_id: Field,\n        in_token_address: Field,\n        out_token_id: Field,\n        in_token_amount: Field,\n        nonce_for_burn: Field,\n        secret_hash_for_redeeming: Field\n    ) {\n        let mut selector = compute_selector(\"_assert_token_is_same(Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [in_token_id, in_token_address]);\n\n        Token::at(in_token_address).burn(\n            &mut context,\n            context.msg_sender(),\n            in_token_amount,\n            nonce_for_burn,\n        );\n\n        selector = compute_selector(\"_save_swap(Field,Field,Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [in_token_id, out_token_id, in_token_amount, secret_hash_for_redeeming]);\n    }\n\n    #[aztec(public)]\n    fn execute_swap_public(\n        swap_id: Field,\n        out_token_amount: Field,\n    ) {\n        let swap = storage.swaps.at(swap_id);\n        let info = swap.read();\n\n        assert(context.msg_sender() == storage.operator.read().address, \"You are not the operator!\");\n        assert(info.is_executed == 0, \"Swap has been executed!\");\n        assert(info.is_private == 0, \"Swap is private!\");\n\n        let mut token = AztecAddress::new(0);\n        if (info.out_token_id == 1) {\n            token = storage.token1.read();\n        } else {\n            token = storage.token2.read();\n        }\n\n        Token::at(token.address).mint_public(\n            context,\n            info.l2_address,\n            out_token_amount\n        );\n\n        swap.write(Swap {\n            is_private: 0,\n            in_token_id: info.in_token_id,\n            out_token_id: info.out_token_id,\n            in_token_amount: info.in_token_amount,\n            out_token_amount: out_token_amount,\n            l2_address: info.l2_address,\n            l2_secret_hash: 0,\n            is_executed: 1\n        });\n    }\n\n    #[aztec(public)]\n    fn execute_swap_private(\n        swap_id: Field,\n        out_token_amount: Field,\n    ) {\n        assert(context.msg_sender() == storage.operator.read().address, \"You are not the operator!\");\n\n        let swap = storage.swaps.at(swap_id);\n        let info = swap.read();\n\n        assert(info.is_executed == 0, \"Swap has been executed!\");\n        assert(info.is_private == 1, \"Swap is not private!\");\n\n        let mut token = AztecAddress::new(0);\n        if (info.out_token_id == 1) {\n            token = storage.token1.read();\n        } else {\n            token = storage.token2.read();\n        }\n\n        Token::at(token.address).mint_private(context, out_token_amount, info.l2_secret_hash);\n\n        swap.write(Swap {\n            is_private: info.is_private,\n            in_token_id: info.in_token_id,\n            out_token_id: info.out_token_id,\n            in_token_amount: info.in_token_amount,\n            out_token_amount: out_token_amount,\n            l2_address: info.l2_address,\n            l2_secret_hash: info.l2_secret_hash,\n            is_executed: 1\n        });\n    }\n\n    unconstrained fn get_counter() -> Field {\n       storage.counter.read()\n    }\n\n    unconstrained fn get_swap(swap_id: Field) -> Swap {\n       storage.swaps.at(swap_id).read()\n    }\n\n    unconstrained fn get_storage() -> [AztecAddress; 4] {\n       [storage.owner.read(), storage.operator.read(), storage.token1.read(), storage.token2.read()]\n    }\n\n    unconstrained fn compute_note_hash_and_nullifier(\n        contract_address: Field,\n        nonce: Field,\n        storage_slot: Field,\n        serialized_note: [Field; 0]) -> [Field; 4] {\n        [0, 0, 0, 0]\n    }\n}",
        "path": "/Users/vovkapultik/Projects/ZKBank/MVPv1/l2-contracts/contracts/bridge/src/main.nr"
      },
      "35": {
        "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
        "path": "std/option.nr"
      },
      "38": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
        "path": "/aztec/abi.nr"
      },
      "40": {
        "source": "// GENERATED FILE - DO NOT EDIT, RUN yarn remake-constants in circuits.js\nglobal ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_PENDING_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_OPTIONALLY_REVEALED_DATA_LENGTH_PER_TX: Field = 4;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_PENDING_READ_REQUESTS_PER_TX: Field = 128;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\nglobal KERNELS_PER_BASE_ROLLUP: Field = 2;\nglobal MAX_NEW_NULLIFIERS_PER_BASE_ROLLUP: Field = 128;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_BASE_ROLLUP: Field = 32;\nglobal MAX_PUBLIC_DATA_READS_PER_BASE_ROLLUP: Field = 32;\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 4;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 254;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 1;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 15;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 7;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 25;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 7;\nglobal HISTORIC_BLOCKS_TREE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 13;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 26;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 7;\nglobal HISTORIC_BLOCK_DATA_LENGTH: Field = 7;\nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 155;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 142;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal EMPTY_NULLIFIED_COMMITMENT: Field = 1000000;\nglobal CALL_PRIVATE_FUNCTION_RETURN_SIZE: Field = 161;\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 87;\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 144;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 104;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\nglobal STORAGE_SLOT_GENERATOR_INDEX__BASE_SLOT = 0;\nglobal STORAGE_SLOT_GENERATOR_INDEX__MAPPING_SLOT = 1;\nglobal STORAGE_SLOT_GENERATOR_INDEX__MAPPING_SLOT_PLACEHOLDER = 2;\nglobal PRIVATE_STATE_NOTE_GENERATOR_INDEX__VALUE = 1;\nglobal PRIVATE_STATE_NOTE_GENERATOR_INDEX__OWNER = 2;\nglobal PRIVATE_STATE_NOTE_GENERATOR_INDEX__CREATOR = 3;\nglobal PRIVATE_STATE_NOTE_GENERATOR_INDEX__SALT = 4;\nglobal PRIVATE_STATE_NOTE_GENERATOR_INDEX__NONCE = 5;\nglobal PRIVATE_STATE_NOTE_GENERATOR_INDEX__MEMO = 6;\nglobal PRIVATE_STATE_NOTE_GENERATOR_INDEX__IS_DUMMY = 7;\nglobal PRIVATE_STATE_TYPE__PARTITIONED = 1;\nglobal PRIVATE_STATE_TYPE__WHOLE = 2;\n",
        "path": "/aztec/constants_gen.nr"
      },
      "41": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    blocks_tree_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/aztec/context.nr"
      },
      "42": {
        "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n  pedersen_hash_with_separator(inputs, hash_index)\n}",
        "path": "/aztec/hash.nr"
      },
      "57": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/aztec/oracle/arguments.nr"
      },
      "58": {
        "source": "use crate::constants_gen::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: Field,\n    _function_selector: Field,\n    _args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: Field,\n    function_selector: Field,\n    args_hash: Field\n) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n    )\n}",
        "path": "/aztec/oracle/call_private_function.nr"
      },
      "65": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/aztec/oracle/enqueue_public_function_call.nr"
      },
      "66": {
        "source": "use crate::constants_gen::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}\n",
        "path": "/aztec/oracle/public_call.nr"
      },
      "68": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/aztec/oracle/storage.nr"
      },
      "70": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse crate::constants_gen::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}",
        "path": "/aztec/private_call_stack_item.nr"
      },
      "71": {
        "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
        "path": "/aztec/public_call_stack_item.nr"
      },
      "72": {
        "source": "use crate::utils::field_from_bytes;\n\nglobal SELECTOR_SIZE = 4;\n\npub fn compute_selector<N>(signature: str<N>) -> Field {\n    let bytes = signature.as_bytes();\n    let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n    \n    let mut selector_be_bytes = [0; SELECTOR_SIZE];\n    for i in 0..SELECTOR_SIZE {\n        selector_be_bytes[i] = hash[i];\n    }\n\n    field_from_bytes(selector_be_bytes, true)\n}",
        "path": "/aztec/selector.nr"
      },
      "75": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/aztec/state_vars/map.nr"
      },
      "76": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/aztec/state_vars/public_state.nr"
      },
      "85": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/aztec/types/type_serialization/field_serialization.nr"
      },
      "87": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\nuse crate::types::address::AztecAddress;\n\nglobal AZTEC_ADDRESS_SERIALIZED_LEN: Field = 1;\n\nfn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> AztecAddress {\n    AztecAddress::new(fields[0])\n}\n\nfn serialize(value: AztecAddress) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n    [value.address]\n}\n\nglobal AztecAddressSerializationMethods = TypeSerializationInterface {\n    deserialize,\n    serialize,\n};",
        "path": "/aztec/types/type_serialization/aztec_address_serialization.nr"
      },
      "88": {
        "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
        "path": "/aztec/utils.nr"
      },
      "95": {
        "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\nuse dep::aztec::types::address::AztecAddress;\n\nstruct Swap {\n    is_private: Field,\n    in_token_id: Field,\n    out_token_id: Field,\n    in_token_amount: Field,\n    out_token_amount: Field,\n    l2_address: Field,\n    l2_secret_hash: Field,\n    is_executed: Field,\n}\n\nglobal SWAP_SERIALIZED_LEN: Field = 8;\n\nfn deserializeSwap(fields: [Field; SWAP_SERIALIZED_LEN]) -> Swap {\n    Swap {\n        is_private: fields[0] as Field,\n        in_token_id: fields[1] as Field,\n        out_token_id: fields[2] as Field,\n        in_token_amount: fields[3] as Field,\n        out_token_amount: fields[4] as Field,\n        l2_address: fields[5] as Field,\n        l2_secret_hash: fields[6] as Field,\n        is_executed: fields[7] as Field,\n    }\n}\n\nfn serializeSwap(swap: Swap) -> [Field; SWAP_SERIALIZED_LEN] {\n    [swap.is_private as Field, swap.in_token_id as Field, swap.out_token_id as Field, swap.in_token_amount as Field, swap.out_token_amount as Field, swap.l2_address as Field, swap.l2_secret_hash as Field, swap.is_executed as Field]\n}\n\nimpl Swap {\n    fn serialize(self: Self) -> [Field; SWAP_SERIALIZED_LEN] {\n        serializeSwap(self)\n    }\n}\n\nglobal SwapSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeSwap,\n    serialize: serializeSwap,\n};",
        "path": "/Users/vovkapultik/Projects/ZKBank/MVPv1/l2-contracts/contracts/bridge/src/swap.nr"
      },
      "96": {
        "source": "use dep::aztec::{\n  context::{PublicContext, PrivateContext},\n  selector::compute_selector,\n  types::address::{AztecAddress},\n};\n\nstruct Token {\n  address: Field,\n}\n\nimpl Token {\n    pub fn at(address: Field) -> Self {\n        Self { address }\n    }\n\n    pub fn transfer_public(self: Self, context: PublicContext, from: Field, to: Field, amount: Field, nonce: Field) {\n        let _transfer_return_values = context.call_public_function(\n          self.address,\n          compute_selector(\"transfer_public((Field),(Field),Field,Field)\"),\n          [from, to, amount, nonce]\n        );\n    }\n\n    pub fn burn(self: Self, context: &mut PrivateContext, from: Field, amount: Field, nonce: Field) {\n        let _return_values = context.call_private_function(\n            self.address,\n            compute_selector(\"burn((Field),Field,Field)\"),\n            [from, amount, nonce]\n        );\n    }\n\n    pub fn burn_public(self: Self, context: PublicContext, from: Field, amount: Field, nonce: Field) {\n        let _return_values = context.call_public_function(\n            self.address,\n            compute_selector(\"burn_public((Field),Field,Field)\"),\n            [from, amount, nonce]\n        );\n    }\n\n    pub fn mint_public(self: Self, context: PublicContext, to: Field, amount: Field) {\n        let _transfer_return_values = context.call_public_function(\n          self.address,\n          compute_selector(\"mint_public((Field),Field)\"),\n          [to, amount]\n        );\n    }\n\n    pub fn mint_private(self: Self, context: PublicContext, amount: Field, secret_hash: Field) {\n        let _return_values = context.call_public_function(\n            self.address,\n            compute_selector(\"mint_private(Field,Field)\"),\n            [amount, secret_hash]\n        );\n    }\n}",
        "path": "/Users/vovkapultik/Projects/ZKBank/MVPv1/l2-contracts/contracts/bridge/src/interfaces.nr"
      }
    }
  }
}